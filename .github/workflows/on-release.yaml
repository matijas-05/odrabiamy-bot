name: Create Docker image & update build

on:
  release:
    types:
      - "published"

jobs:
  build-push:
    name: Build and push the image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.5.0

      - name: Dev or prod build
        run: |
          sudo apt-get install -y jq

          VERSION=$(cat ./package.json | jq -r '.version')
          if [[ "$VERSION" =~ "-dev" ]]; then ROLLING_TAG="dev"; else ROLLING_TAG="latest"; fi
          if [[ "$VERSION" =~ "-dev" ]]; then COMPOSE_SERVICE="dev"; else COMPOSE_SERVICE="prod"; fi

          echo "version: $VERSION"
          echo "rolling_tag: $ROLLING_TAG"
          echo "compose_service: $COMPOSE_SERVICE"

          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "ROLLING_TAG=$ROLLING_TAG" >> $GITHUB_OUTPUT
          echo "COMPOSE_SERVICE=$COMPOSE_SERVICE" >> $GITHUB_OUTPUT
        id: dev_or_prod

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image with '${{ steps.dev_or_prod.outputs.VERSION }}' tag
        uses: docker/build-push-action@v3.2.0
        with:
          tags: matijas05/odrabiamy-bot:${{ steps.dev_or_prod.outputs.VERSION }}
          push: true
          build-args: |
            VERSION=${{ steps.dev_or_prod.outputs.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push image with '${{ steps.dev_or_prod.outputs.ROLLING_TAG }}' tag
        uses: docker/build-push-action@v3.2.0
        with:
          tags: matijas05/odrabiamy-bot:${{ steps.dev_or_prod.outputs.ROLLING_TAG }}
          push: true
          build-args: |
            VERSION=${{ steps.dev_or_prod.outputs.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-build:
    name: Update build on server
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Update '${{ steps.dev_or_prod.outputs.COMPOSE_SERVICE }}' build
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /srv/.docker-compose/odrabiamy-bot
            docker compose pull ${{ steps.dev_or_prod.outputs.COMPOSE_SERVICE }} && docker compose up -d ${{ steps.dev_or_prod.outputs.COMPOSE_SERVICE }}
            echo "Waiting for healthcheck..."
            docker exec -it odrabiamy-bot bash
            curl --fail --connection-timeout 30 http://localhost:3000
            exit
